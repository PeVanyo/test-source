name: 'Rolling Update Action'
description: 'Perform a rolling update on EC2 instances via a bastion host'
on: 
  workflow_call:
    inputs:
      bastion-host:
        description: 'IP or hostname of the bastion host'
        required: true
      ssh-key:
        description: 'SSH Key for EC2'
        required: true
      directory:
        description: 'Directory to cd into'
        required: true
      domain:
        description: 'Domain to run the host command on'
        required: true
      service:
        description: 'Service name derived from the repository name'
        required: true
      branch:
        description: 'The branch from which the push originated'
        required: true
runs:
  using: "composite"
  steps:
    - name: Insert SSH keys into agent
      shell: bash
      run: |
        echo "${{ inputs.ssh-key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-add

    - name: Rolling update on app servers
      shell: bash
      run: |
        IPs=$(host apps.${{ inputs.domain }} | grep -oP 'has address \K\S+')
        for IP in $IPs
        do
          echo "Updating $IP..."
          ssh -J ubuntu@${{ inputs.bastion-host }} ubuntu@$IP <<EOF
            cd ${{ inputs.directory }}
            git switch ${{ inputs.branch }}
            git pull -f
            sudo systemctl reload sidekiq@${{ inputs.service }}
            sudo systemctl reload rails@${{ inputs.service }}
          EOF
          echo "Updated $IP"
        done

    - name: Rolling update on a sidekiq servers
      shell: bash
      run: |
        IPs=$(host sidekiqs.${{ inputs.domain }} | grep -oP 'has address \K\S+')
        for IP in $IPs
        do
          echo "Updating $IP..."
          ssh -J ubuntu@${{ inputs.bastion-host }} ubuntu@$IP <<EOF
            cd ${{ inputs.directory }}
            git switch ${{ inputs.branch }}
            git pull -f
            sudo systemctl reload sidekiq@${{ inputs.service }}
            sudo systemctl reload rails@${{ inputs.service }}
          EOF
          echo "Updated $IP"
        done
